name: Playwright and Synpress Tests for PRs, Pushes, and Dispatch Events

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - app-next-develop-push

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the e2e-tests Repository
      - name: Checkout e2e-tests Repository
        uses: actions/checkout@v4
        with:
          path: ./ # Place the e2e-tests repository in the root directory

      # Step 2: Install dependencies for the e2e-tests repository
      - name: Install dependencies for e2e-tests
        run: yarn install

      # Step 3: Add and initialize the app-next submodule tracking the develop branch (No secret token needed)
      - name: Initialize app-next as a submodule (develop branch)
        run: |
          git submodule add https://github.com/aragon/app-next ./app-next || true
          cd ./app-next
          git checkout develop
          git pull origin develop
          cd ..

      # Step 4: Install dependencies for the App-Next submodule
      - name: Install dependencies for App-Next
        working-directory: ./app-next
        run: yarn install

      # Step 5: Install Playwright Browsers for e2e-tests
      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps

      # Step 6: Build Synpress cache (if needed)
      - name: Build Synpress cache
        run: xvfb-run npx synpress ./tests/
        env:
          METAMASK_SEED_PHRASE: ${{ secrets.METAMASK_SEED_PHRASE }}
          METAMASK_PASSWORD: ${{ secrets.METAMASK_PASSWORD }}

      # Step 7: Start App-Next Development Server
      - name: Start App-Next Development Server
        working-directory: ./app-next
        run: yarn dev &
        # Optional environment variables can be added here
        # env:
        #   NODE_ENV: development

      # Step 8: Wait for App-Next server to be ready
      #   - name: Wait for App-Next server to be ready
      #     run: |
      #       until curl --output /dev/null --silent --head --fail http://localhost:3000; do
      #         echo "Waiting for the server to start..."
      #         sleep 5
      #       done

      # Step 9: Run E2E tests (Playwright with server)
      - name: Run E2E tests with Playwright
        run: xvfb-run yarn playwright test ./tests/multisig-plugin/02_publishProposal.spec.ts --project=chromium
        env:
          METAMASK_SEED_PHRASE: ${{ secrets.METAMASK_SEED_PHRASE }}
          METAMASK_PASSWORD: ${{ secrets.METAMASK_PASSWORD }}
        continue-on-error: true

      # Step 10: Upload Playwright Report as Artifact
      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
